#! /usr/bin/env bash

set -eu -o pipefail
shopt -s nullglob

tmpfile=$(mktemp)

error_exit()
{
    echo >&2 "*** $0:" "$@"
    regular_exit=true
    exit 1
}

exit_trap()
{
    local lc="$BASH_COMMAND" rc=$?
    test "$rc" -eq 0 || test -n "${regular_exit:-}" || echo "*** error $rc: $lc"
    test ! -f "$tmpfile" || rm -f "$tmpfile"
}

trap exit_trap EXIT

cd "$(dirname "$0")"/..

cabal -v0 v2-update hackage.haskell.org &
parallel 'if [ -d {}/.osc ]; then cd {} && osc update --unexpand-link >/dev/null; fi' ::: _build/* &
wait

parallel 'if [ -d {}/.osc ]; then cd {} && osc status; fi' ::: _build/* >"$tmpfile"
if [ -s "$tmpfile" ]; then
    error_exit osc checkouts contain uncommitted changes
fi

git status --porcelain >"$tmpfile"
if [ -s "$tmpfile" ]; then
    error_exit git repository has uncommitted changes
fi

cabal -v0 v2-run cabal2obs -- --no-progress --lint
parallel 'if [ -d {}/.osc ]; then cd {} && ../../tools/commit >/dev/null; fi' ::: _build/*
